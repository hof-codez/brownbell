# .github/workflows/update-standings.yml
name: Update Brown Bell Standings

on:
  schedule:
    # Tuesday at 10 AM ET (7 AM AZ) - 2 PM UTC
    - cron: '0 14 * * 2'  
    # Thursday at 4 PM AZ (11 PM UTC) - injury checkpoint + scores
    - cron: '0 23 * * 4'
    # Thursday at 8 PM AZ (3 AM UTC Friday) - post-TNF scores
    - cron: '0 3 * * 5'
    # Saturday at 4 AM AZ (11 AM UTC) - international game prep
    - cron: '0 11 * * 6'
    # Sunday at 4 AM AZ (11 AM UTC) - pre-international games
    - cron: '0 11 * * 0'
    # Sunday at 9 AM AZ (4 PM UTC) - pre-AM games  
    - cron: '0 16 * * 0'
    # Sunday at 12:05 PM AZ (7:05 PM UTC) - post-AM games
    - cron: '5 19 * * 0'
    # Sunday at 4 PM AZ (11 PM UTC) - post-evening games
    - cron: '0 23 * * 0'
    # Sunday at 9 PM AZ (4 AM UTC Monday) - post-SNF
    - cron: '0 4 * * 1'
    # Monday at 4 PM AZ (11 PM UTC) - post-game cleanup
    - cron: '0 23 * * 1'
    # Monday at 8 PM AZ (3 AM UTC Tuesday) - post-MNF scores
    - cron: '0 3 * * 2'
  
  # Allow manual triggering
  workflow_dispatch:
    inputs:
      force_substitutions:
        description: 'Force generate substitutions'
        required: false
        default: false
        type: boolean
      pregame_check:
        description: 'Run pre-game injury check'
        required: false
        default: false
        type: boolean
      international_check:
        description: 'Run international game injury check'
        required: false
        default: false
        type: boolean

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  update-standings:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Run automation
      env:
        SLEEPER_LEAGUE_ID: ${{ secrets.SLEEPER_LEAGUE_ID }}
        FORCE_SUBSTITUTIONS: ${{ inputs.force_substitutions }}
        PREGAME_CHECK: ${{ inputs.pregame_check }}
        INTERNATIONAL_CHECK: ${{ inputs.international_check }}
      run: node update-standings.js

    - name: Check for changes
      id: verify_changed
      run: |
        if git diff --quiet brown-bell-data.json; then
          echo "changed=false" >> $GITHUB_OUTPUT
        else
          echo "changed=true" >> $GITHUB_OUTPUT
        fi

    - name: Commit and push changes
      if: steps.verify_changed.outputs.changed == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "Brown Bell Bot"
        git add brown-bell-data.json
        git commit -m "üèà Auto-update standings $(date '+%Y-%m-%d %H:%M')"
        git push

    - name: Create deployment artifact
      if: steps.verify_changed.outputs.changed == 'true'
      run: |
        mkdir -p deployment
        cp brown_bell_viewer.html deployment/index.html
        cp brown-bell-data.json deployment/brown-bell-data.json
        
    - name: Deploy to GitHub Pages
      if: steps.verify_changed.outputs.changed == 'true'
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./deployment
        publish_branch: gh-pages
        force_orphan: true

    - name: Log automation results
      run: |
        echo "Automation completed at $(date)"
        if [ -f brown-bell-data.json ]; then
          echo "Data file size: $(du -h brown-bell-data.json | cut -f1)"
          if command -v jq >/dev/null 2>&1; then
            echo "Last update time: $(jq -r '.timestamp' brown-bell-data.json)"
            echo "Current week: $(jq -r '.currentWeek' brown-bell-data.json)"
            echo "Checkpoint type: $(jq -r '.lastCheckpointType // "ROUTINE_UPDATE"' brown-bell-data.json)"
            echo "New substitutions: $(jq -r '.automationStats.newSubstitutions' brown-bell-data.json)"
          else
            echo "JSON data updated successfully"
          fi
        fi

    - name: Output summary
      if: always()
      run: |
        if [ "${{ steps.verify_changed.outputs.changed }}" == "true" ]; then
          echo "‚úÖ Brown Bell data updated and deployed"
        else
          echo "‚ÑπÔ∏è No changes detected - data is up to date"
        fi